Brute force: 
    bool isAnagram(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        return s == t;        
    }
Better :
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()) return false;
        unordered_map<char,int> ump;
        for(int i=0;i<s.size();i++){
            ump[s[i]]++;
        }   
        for(char&c:t){
            if(ump[c]==0) return false;
            ump[c]--;
        } 
        return true;
    }
Best :
  bool isAnagram(string s, string t) {
          if(s.size()!=t.size()) return false;
          int freq[26]={0};
          for(int i=0;i<s.size();i++){
              freq[s[i]-'a']++;
          }   
          for(char&c:t){
              if(freq[c-'a']==0) return false;
              freq[c-'a']--;
          } 
          return true;
    }
------------------------------------OR----------------------------------------------------------------
  bool isAnagram(string s, string t) {
          if(s.size()!=t.size()) return false;
          int freq[26]={0};
          for(int i=0;i<s.size();i++){
              freq[s[i]-'a']++;
              freq[t[i]-'a']--;
          }   
          for(int i=0;i<26;i++){
              if(freq[i]!=0) return false;
          } 
          return true;
    }
